apply(iris[,1:4],1,mean)
apply(iris,2,mean)
apply(iris,1,mean)
apply(iris[, 1:4], 2, mean)
?apply
data(mtcars)
?mtcars
head(mtcars)
class(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl==4, mtcars$hp, mean)
sapply(split(mtcars, mtcars$cyl)$'4'$, mean)
sapply(split(mtcars$mpg, mtcars$cyl==4), mean)
m1 <- sapply(split(mtcars$mpg, mtcars$cyl==4), mean)
m1
round(6.588)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
Rscript
?Rscript
my_data
head(my_data)
library(rattle)
rattle()
rattle()
library(rattle)
library(Hmisc)
library(rattle)
rattle()
x11()
pairs(x, labels, panel = points, ...,
horInd = 1:nc, verInd = 1:nc,
lower.panel = panel, upper.panel = panel,
diag.panel = NULL, text.panel = textPanel,
label.pos = 0.5 + has.diag/3, line.main = 3,
cex.labels = NULL, font.labels = 1,
row1attop = TRUE, gap = 1, log = "")
library(rattle)
rattle()
library(rattle)
rattle()
library(rattle)
rattle()
hist(weather)
hist(MinTemp)
hist()
hist(weather,
main="Histogram for weather",
xlab="Density",
border="blue",
col="green",
xlim=c(100,700),
las=1,
breaks=5)
library(rattle)
rattle()
library(rattle)
rattle()
x11()
x<-rnorm(100)
y<-rnorm(100)
z<-rnorm(100)
df<-data.frame(x,y,z)
data()
head(waether)
head(weather)
plus()
head(weather)
x11()
x11()
rm(list = ls())
source('~/.active-rstudio-document')
test(10,2)
library(lattice)
points = matrix(nrow=61, ncol=61, seq(-3,3,0.1)) ## Test points for plotting
seq(-3,3,0.1)
points
source('~/.active-rstudio-document')
?test
??tes
runif
runif(1,-1,1)
?runif
source('~/.active-rstudio-document')
setwd(dir)
setwd(F:\R)
setwd(F:/R)
setwd("F:/R")
read.csv(breast-cancer_scale.csv)
read.csv('breast-cancer_scale.csv')
source('~/.active-rstudio-document')
head(data)
View(data)
View(data)
plot(data,pch=16)
View(data)
View(data)
data <- read.csv('breast-cancer_scale.csv',header = FALSE)
head(data)
plot(data,pch=16)
clc-wc
clc
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
legend("topleft",c('Positive,Negative' ),col=seq(2),pch=1,text.col=seq(2))
legend("topleft",c('Positive','Negative'),col=seq(2),pch=1,text.col=seq(2))
legend("topleft",c('Positive','Negative'),col=seq(2),pch=1,text.col=seq(2))
?rbind
source('F:/R/svm.r')
source('F:/R/svm.r')
source('F:/R/svm.r')
source('F:/R/svm.r')
source('F:/R/svm.r')
plot(x,col=ifelse(y>0,1,2),col='red')
plot(x,col=ifelse(y>0,1,2),type = o)
plot(x,col=ifelse(y>0,1,2))
legend("topleft",c('Positive','Negative'),col=seq(2),pch=1,text.col=seq(2))
source('F:/R/svm.r')
source('F:/R/svm.r')
source('F:/R/svm.r')
source('F:/R/svm.r')
library(kernlab)
svp <- ksvm(xtrain,ytrain,type="C-svc",kernel='vanilladotâ€™,C=100,scaled=c())
source('F:/R/svm.r')
source('F:/R/svm.r')
svp
attributes(svp)
xtrain
plot(svp,data=xtrain)
table(ytest,ypred)
source('F:/R/svm.r')
plot(svp,data=xtrain)
source('F:/R/svm.r')
ypred
ypredscore
source('F:/R/svm.r')
source('F:/R/svm.r')
plot(perf)
library(ROCR)
source('F:/R/svm.r')
plic <- installed.packages(.Library, priority = "high", fields = "License")
plic
installed.packages()
installed.packages(ndtv)
installed.packages(.ndtv)
installed.packages(fields = ndtv)
installed.packages(fields = 'ndtv')
?attach
attach(thuesen)
?thuesen
??thuesen
library( package = ISwR )
library(ISwR)
install.packages(ISwR)
help( package = ISwR )
help( package = ISwR)
help( package = ISwR)
help(package = ISwR)
library(ISwR)
install.packages("ISwR")
attach(thuesen)
library(ISwR)
attach(thuesen)
lm(short.velocity~blood.glucose)
?thuesen
View(thuesen)
plot(short.velocity~blood.glucose)
plot(short.velocity~blood.glucose, data = thuesen)
plot(short.velocity~blood.glucose)
plot(short.velocity~blood.glucose, data = thuesen)
source('F:/Sonovum AG/Klassification/Classification_VRA.R', echo=TRUE)
View(B_data)
dim(B_data)
head(B_data)
length(Flag_B)
rm(list = ls())
?wine
data(wine)
read.csv(file:///F:/Data Science & machine learning_Readings/Wine Analysis/data.data)
read.csv("file:///F:/Data Science & machine learning_Readings/Wine Analysis/data.data")
wine <- read.csv("file:///F:/Data Science & machine learning_Readings/Wine Analysis/data.data")
class(wine)
colnames(wine) <- c('Type', 'Alcohol', 'Malic', 'Ash',
'Alcalinity', 'Magnesium', 'Phenols',
'Flavanoids', 'Nonflavanoids',
'Proanthocyanins', 'Color', 'Hue',
'Dilution', 'Proline')
wine$Type <- as.factor(wine$Type)
save(wine, file="wine.Rdata", compress=TRUE)
source('F:/Data Science & machine learning_Readings/Wine Analysis/wine.R', echo=TRUE)
read.csv(file:///F:/Data Science & machine learning_Readings/Flags/flagdata.data)
read.csv("file:///F:/Data Science & machine learning_Readings/Flags/flagdata.data")
flags_data <- read.csv("file:///F:/Data Science & machine learning_Readings/Flags/flagdata.data")
View(flags_data)
View(wine)
rm(ls=list())
rm(list=ls()
)
install.packages("tensorflow")
library(tensorflow)
library('tensorflow')
library('tensorflow')
library("tensorflow")
library('tensorflow')
?array
source('F:/Independent Projects/softmacx regrassion_tensorflow.R', echo=TRUE)
install.packages("tensorflow")
source('F:/Independent Projects/softmacx regrassion_tensorflow.R', echo=TRUE)
source('F:/Independent Projects/softmacx regrassion_tensorflow.R', echo=TRUE)
source('F:/Independent Projects/softmacx regrassion_tensorflow.R', echo=TRUE)
library('tensorflow')
shiny::runApp('F:/Git Projects/Climate-Change-ShinyApp')
runApp('F:/Git Projects/Climate-Change-ShinyApp')
runApp('F:/Git Projects/Climate-Change-ShinyApp')
runApp('F:/Git Projects/Climate-Change-ShinyApp')
# Import libraries
library(shiny)
library(plotly)
library(ggplot2)
library(ggthemes) # themes to assist ggplot
library(data.table) # for fast reading and data manipulation
library(tidyr)
library(dplyr)
# Data preprocessing
# ====================================================================================
data <- read.csv('Data/GlobalLandTemperaturesByState.csv', TRUE,",")
head(data)
data <- na.omit(data)
data <- separate(data,col = dt, into = c("Year", "Month", "Day"), convert = TRUE)
data <- read.csv('Data/GlobalLandTemperaturesByState.csv', TRUE,",")
setwd("F:/Git Projects/Climate-Change-ShinyApp/scripts")
data <- read.csv('Data/GlobalLandTemperaturesByState.csv', TRUE,",")
data <- read.csv('Climate-Change-ShinyApp/Data/GlobalLandTemperaturesByState.csv', TRUE,",")
data <- read.csv('file:///F:/Git Projects/Climate-Change-ShinyApp/Data/GlobalLandTemperaturesByState.csv', TRUE,",")
data <- na.omit(data)
data %>%
#filter(Country=="India")  %>%
separate(col = dt, into = c("Year", "Month", "Day"), convert = TRUE) ->data
data<-na.omit(data)
data %>%
group_by(Country) %>%
filter(Year>1930) %>%
group_by(Year)  -> data2
View(data2)
data2 %>%
#group_by(Year) %>%
summarise(Temp = mean(AverageTemperature)) -> data2
data %>%
group_by(Country) %>%
filter(Year>1930) %>%
group_by(Year)  -> data2
View(data2)
ggplot(data2, aes(x=Year, y=AverageTemperature)) + facet_wrap(~ Country,nrow = 1)
data %>%
group_by(Country) %>%
filter(Year>1930) %>%
group_by(Year)  -> data1
data1 %>%
group_by(Year) %>%
summarise(Temp = mean(AverageTemperature)) -> data2
ggplot(data1, aes(x=Year, y=Temp)) + geom_path(colour = "grey50") + geom_point(aes(colour=Year))
png(filename="plots/plot1.png")
ggplot(data2, aes(x=Year, y=Temp)) + geom_path(colour = "grey50") + geom_point(aes(colour=Year))
View(data)
head(data)
data <- data   %>%
tbl_df() %>%
select(Year , AverageTemperature, Country)
data %>%
summarise_each(mean_temp = mean(AverageTemperature))
data %>%
summarise(mean_temp = mean(AverageTemperature))
data %>%
summarise_each(funs(mean_temp), mean_temp = mean(AverageTemperature))
data %>%
summarise_each(funs(mean), mean_temp = mean(AverageTemperature))
data %>%
group_by(Year) %>%
summarise_each(funs(mean), mean_temp = mean(AverageTemperature))
data %>%
group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature))
data %>%
group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
data %>%
group_by(Year) %>%
summarise_each(Country)
summarise_each(funs(mean), mean = mean(AverageTemperature))
data %>%
group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
data1 %>%
group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
warnings()
data1 %>%
#group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
data_df <- tbl_df(data)
class(data_df)
data_df
data_df <- filter(data_df,Year>1930)
ggplot(data_df, aes(x=Year, y=AverageTemperature)) + facet_wrap(~ Country,nrow = 1)
ggplot(data_df, aes(x=Year, y=AverageTemperature)) + facet_wrap(~ Country)
View(data_df)
data_df <- group_by(Year)
data_df <- group_by(data_df,Year)
View(data_df)
data_df <- group_by(data_df,Year)
View(data_df)
summarise(data_df)
data_df <- tbl_df(data)
data_df <- filter(data_df,Year>1930)
summarise(data_df)
View(data_df)
class(data_df)
yearly <- group_by(data_df,Year)
View(yearly)
groupeddata <- group_by(data_df,Year,Country)
View(groupeddata)
yearly <- summarise(groupeddata,Year = n())
yearly <- summarise(groupeddata,Year = n()
yearly <- summarise(groupeddata,Year = n())
yearly
summarise(group_by(yearly))
summarise(yearly, group_by(yearly) )
data_df %>%
group_by(Year) %>%
group_by(Country)
data_df %>%
group_by(Year) %>%
group_by(Country) %>%
summarise(Temp = mean(AverageTemperature)) -> data_df1
View(data_df1)
data_df %>%
group_by(Year) %>%
group_by(Country) -> data_df1
View(data_df1)
unique(data_df$Year)
yr <- unique(data_df$Year)
for (i in yr) {
AvgTemp <- mean(data_df$AverageTemperature)
}
for (i in yr) {
AvgTemp <- mean[(data_df$AverageTemperature),i]
}
for (i in yr) {
AvgTemp[i] <- mean(data_df$AverageTemperature)
}
rm(data2)
data_df %>%
group_by(Year) %>%
group_by(Country) -> data_df1
data_df <- filter(data_df,Year>1930)
View(data_df1)
group_by(Country) -> data_df1
rm(data_df1)
data_df <- tbl_df(data1)
data_df <- filter(data_df,Year>1930)
data1 <- data1   %>%
tbl_df() %>%
select(Year , AverageTemperature, Country)
data1 %>%
#group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
data <- read.csv('file:///F:/Git Projects/Climate-Change-ShinyApp/Data/GlobalLandTemperaturesByState.csv', TRUE,",")
head(data)
data <- na.omit(data)
#data_new <- summarise(data_new,Temp = mean(AverageTemperature))
#data_new <- filter(data,Country=="India")
#vars <- c(data_new$Year,data_new$AverageTemperature)
data %>%
#filter(Country=="India")  %>%
separate(col = dt, into = c("Year", "Month", "Day"), convert = TRUE) ->data
data<-na.omit(data)
data %>%
group_by(Country) %>%
filter(Year>1930) %>%
group_by(Year)  -> data1
data1 %>%
group_by(Year) %>%
summarise(Temp = mean(AverageTemperature)) -> data2
View(data2)
View(data1)
View(data2)
data1 %>%
group_by(Country) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country)
data1 %>%
group_by(Country) -> data3
View(data3)
data1 %>%
group_by(Year) -> data3
View(data3)
data1 %>%
group_by(Country) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise_each(funs(mean), mean = mean(AverageTemperature), Country) -> data3
View(data3)
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise_each(AverageTemperature, Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summaris(AverageTemperature, Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise(AverageTemperature, Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
select(AverageTemperature, Country) -> data3
View(data3)
ggplot(data3, aes(x=Year, y=AverageTemperature)) + facet_wrap(~ Country,nrow = 1)
ggplot(data3, aes(x=Year, y=AverageTemperature)) + facet_wrap(~ Country)
View(data3)
View(data3)
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
filter(AverageTemperature, Country, Year) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
select(AverageTemperature, Country,Year) -> data3
View(data3)
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
select(AverageTemperature, Country) -> data3
?group_by
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise(data1, AverageTemperature, Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise(data1, mean(AverageTemperature), Country) -> data3
data1 %>%
group_by(Country) %>%
group_by(Year) %>%
summarise(data1, mean(AverageTemperature), group_by(Year), Country) -> data3
data1 %>%
group_by(Country) %>%
#  group_by(Year) %>%
summarise(data1, mean(AverageTemperature), group_by(Year), Country) -> data3
data1 %>%
#  group_by(Country) %>%
#  group_by(Year) %>%
summarise(data1, mean(AverageTemperature), group_by(Year), Country) -> data3
data1 %>%
#  group_by(Country) %>%
#  group_by(Year) %>%
summarise(mean(AverageTemperature), group_by(Year), Country) -> data3
data1 %>%
#  group_by(Country) %>%
#  group_by(Year) %>%
summarise(AverageTemperature, group_by(Year), Country) -> data3
data1 %>%
#  group_by(Country) %>%
#  group_by(Year) %>%
summarise(AverageTemperature, group_by(Year), group_by(Country)) -> data3
class(data1)
rm(flags_data)
rm(wine)
rm(yearly)
rm(groupeddata)
head(data1)
head(data3)
head(data3)
unique.data.frame(data3,Year)
unique.data.frame(data3$Year)
unique(data3$Year)
trail <- data.frame(unique(data3$Year), data$AverageTemperature, data$Country)
x <- unique(data3$Year)
rm(data3)
View(data)
by_ctry <- group_by(data,Country)
View(by_ctry)
rm(by_ctry)
tapply(data$Year, data$Country, FUN = mean)
?ddply
ddply
ddply(data, 'Year')
?ddply
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
library(plyr)
ddply()
?ddply
library(plyr)
install.packages("plyr")
install.packages("plyr")
